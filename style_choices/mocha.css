/*Modified version of https://github.com/catppuccin/Stable-Diffusion-Web-UI/blob/main/flavors/mocha.css*/

/*
 quickcss underscore target (<- cant write target in comments) is for filereader,
 it reads from the following line to breakfilereader for automatic colorpicker generation
 color codes must be in hex, alpha not supported by default, there is a way, calc a slider like in radius example
*/
:root, .gradio-container, #context-menu, quickcss_target {
  --rosewater: #f5e0dc;
  --flamingo: #f2cdcd;
  --pink: #f5c2e7;
  --mauve: #cba6f7;
  --red: #f38ba8;
  --maroon: #eba0ac;
  --peach: #fab387;
  --yellow: #f9e2af;
  --green: #a6e3a1;
  --teal: #94e2d5;
  --sky: #89dceb;
  --sapphire: #74c7ec;
  --lavender: #b4befe;
  --blue: #89b4fa;
  --text: #cdd6f4;
  --subtext1: #bac2de;
  --subtext0: #a6adc8;
  --overlay2: #9399b2;
  --overlay1: #7f849c;
  --overlay0: #6c7086;
  --surface2: #585b70;
  --surface1: #45475a;
  --surface0: #313244;
  --base: #1e1e2e;
  --mantle: #181825;
  --crust: #11111b;
  --shadow: #010409;
  /*ENDCOLORPICKERS*/
  --radius : 1;
  /*BREAKFILEREADER*/
  --accent: var(--maroon);
}
/*Main radius control*/
.gradio-container *:not(img){
    border-radius: calc(1px *var(--radius)) !important;
}
.gradio-container div[id*=tab][class*=tabitem] {
    border-radius: 0px !important;
}
.gradio-container div #tabs button[class*=bg-white], .gradio-container div #tabs div button[class*=border-transparent]  {
    border-bottom-left-radius: 0px!important;
    border-bottom-right-radius: 0px!important;
    border-top: calc(0.25px * var(--radius))!important;
}
.gradio-container img{
    border-radius: 0px !important
}

.gradark :is(h1, h2, h3, h4) {
  color: var(--text) !important;
}
#tabs > div:nth-child(1) {
  flex-wrap:wrap-reverse;
}
.tabs > div:first-child {
  border: none !important;
  margin-bottom: 3px;
  gap: 3px 0px;

}
.tabs > div:first-child > button {
	border-radius: 8px 8px 0px 0px;
	/* outline: 1px solid var(--base) !important; */
	border-color: var(--base);
	border-width: 1px;
	border-bottom-width: 0px;
}

.tabs > .tabitem {
  outline: 1px solid var(--base);
}

#txt2img_subseed_show_box > div:nth-child(1) {
  background-color: var(--base);
}
.context-menu-items a,
.context-menu-items,
#context-menu {
  background-color: var(--surface0) !important;
  color: var(--text) !important;
  border-color: var(--accent) !important;
  border-radius: 10px;
}

#interrogate_col {
	min-width: unset !important;
}

#txt2img_settings {
  max-width: 40%;
  color: var(--subtext1);
}

#txt2img_gallery,
#img2img_gallery {
  min-height: 600px;
}

#txt2img_interrupt,
#img2img_interrupt {
  background-color: var(--red);
  color: var(--mantle);
}

#txt2img_skip,
#img2img_skip {
  background-color: var(--lavender);
  background-color: var(--mantle);
}

#txt2img_sampling label {
  color: var(--text);
}

#txt2img_generate,
#img2img_generate,
#txt2img_interrupt,
#img2img_interrupt {
  background-color: var(--text);
}
.dark .border,
.dark .border-gray-100,
.dark .border-gray-200,
.dark .border-gray-300,
.dark .\!border,
.dark .\!border-gray-300 {
  border-color: transparent;
}

.dark fieldset span.text-gray-500,
.dark .gr-block.gr-box span.text-gray-500,
.dark label.block span {
  background-color: var(--base);
  color: var(--text);
  border: transparent;
  border-radius: 10px;
}
#subseed_show_box > div {
  background-color: var(--base);
}

#txt2img_gallery > div:nth-child(2) > img:nth-child(2) {
  border-radius: 10px;
}

.text-gray-400 {
  color: var(--subtext0);
  background-color: var(--crust);
}

.dark .dark\:bg-gray-950 {
  background-color: var(--crust);
}

.dark .gr-panel {
  background-color: var(--mantle);
}

.dark .dark\:bg-gray-700 {
  background-color: var(--base);
}

.dark .gr-box {
  background-color: var(--base);
  color: var(--subtext0);
}

.dark .gr-input-label {
  background: var(--surface0);
}

.dark .gr-check-radio {
  background-color: var(--base);
}

.dark .hover\:text-gray-700:hover {
  color: var(--text);
}

.dark .gr-button {
	border-color: var(--surface1);
	background-color: var(--base);
}

.dark .gr-button-secondary {
  background-color: var(--base);
  --tw-gradient-from: var(--base);
  --tw-gradient-to: var(--base);
  border-color: var(--surface0);
  color: var(--subtext0);
}

.performance {
  color: var(--surface2);
}

.dark fieldset span.text-gray-500,
.dark .gr-block.gr-box span.text-gray-500,
.dark label.block span {
  background-color: var(--base);
  color: var(--text);
}

.dark .gr-button-primary {
  color: var(--base);
  border-color: var(--accent);
  --tw-gradient-from: var(--accent);
  --tw-gradient-stops: var(--accent), var(--accent);
  --tw-gradient-to: var(--accent);
}

.dark .bg-white {
  background-color: var(--surface0);
  color: var(--accent);
}

.dark .bg-gray-200,
.dark .\!bg-gray-200 {
  background-color: var(--mantle);
  border-radius: 10px;
  gap: 0px 5px;
}


.dark .dark\:text-gray-500 {
  background-color: var(--crust);
}

.dark .dark\:bg-gray-900 {
  background-color: var(--base);
}

.border {
  border-width: 1px;
}

.gallery-item {
  --tw-ring-shadow: none !important;
  --tw-ring-offset-color: none !important;
}

input[type="range"]::-ms-track {
  background: transparent;
}

input[type="range"]::-ms-fill-lower {
  background: var(--accent);
  border-radius: 10px;
}
input[type="range"]::-ms-fill-upper {
  background: var(--overlay0);
  border-radius: 10px;
}

input[type="range"]:focus::-ms-fill-lower {
  background: var(--accent);
}
input[type="range"]:focus::-ms-fill-upper {
  background: var(--overlay0);
}

.dark .gr-check-radio:checked {
  background-color: var(--accent);
}

.dark .gr-input::placeholder {
  color: var(--subtext1);
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  color: var(--subtext1);
}

.gr-form > .gr-block {
  border-radius: 0.5rem;
  margin-bottom: 5px;
}

div.svelte-10ogue4 > :not(.absolute) {
  border-radius: 0.5rem;
}

.dark .gr-button-secondary:hover {
  --tw-gradient-to: var(--surface0);
  --tw-gradient-from: var(--surface0);
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}
.gr-box > div > div > input.gr-text-input {
  width: 4em;
}

.progressDiv .progress {
  background: var(--accent);
  color: var(--shadow);
}

.dark .progressDiv {
  background-color: var(--surface0);
}

input[type="range"] {
  font-size: 1.5rem;
}

input[type="range"] {
  color: var(--accent);
  --thumb-height: 0.5em;
  --track-height: 0.125em;
  --track-color: var(--surface0);
  --brightness-hover: 130%;
  --brightness-down: 80%;
  --clip-edges: 0.125em;
}

input[type="range"].win10-thumb {
  color: var(--accent);

  --thumb-height: 0.5em;
  --thumb-width: 0.5em;
  --clip-edges: 0.0125em;
}

@media (prefers-color-scheme: dark) {
  input[type="range"] {
    color: var(--accent);
    --track-color: var(--surface0);
  }

  input[type="range"].win10-thumb {
    color: var(--accent);
  }
}

/* === range commons === */
input[type="range"] {
  position: relative;
  background: #fff0;
  overflow: hidden;
}

input[type="range"]:active {
  cursor: grabbing;
}

input[type="range"]:disabled {
  filter: grayscale(1);
  opacity: 0.3;
  cursor: not-allowed;
}

/* === WebKit specific styles === */
input[type="range"],
input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  transition: all ease 100ms;
  height: var(--thumb-height);
}

input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
  position: relative;
}

input[type="range"]::-webkit-slider-thumb {
  --thumb-radius: calc((var(--thumb-height) * 0.5) - 1px);
  --clip-top: calc((var(--thumb-height) - var(--track-height)) * 0.5 - 0.5px);
  --clip-bottom: calc(var(--thumb-height) - var(--clip-top));
  --clip-further: calc(100% + 1px);
  --box-fill: calc(-100vmax - var(--thumb-width, var(--thumb-height))) 0 0 100vmax currentColor;

  width: var(--thumb-width, var(--thumb-height));
  background: linear-gradient(currentColor 0 0) scroll no-repeat left center / 50% calc(var(--track-height) + 1px);
  background-color: currentColor;
  box-shadow: var(--box-fill);
  border-radius: var(--thumb-width, var(--thumb-height));

  filter: brightness(100%);
  clip-path: polygon(
    100% -1px,
    var(--clip-edges) -1px,
    0 var(--clip-top),
    -100vmax var(--clip-top),
    -100vmax var(--clip-bottom),
    0 var(--clip-bottom),
    var(--clip-edges) 100%,
    var(--clip-further) var(--clip-further)
  );
}

input[type="range"]:hover::-webkit-slider-thumb {
  filter: brightness(var(--brightness-hover));
  cursor: grab;
}

input[type="range"]:active::-webkit-slider-thumb {
  filter: brightness(var(--brightness-down));
  cursor: grabbing;
}

input[type="range"]::-webkit-slider-runnable-track {
  background: linear-gradient(var(--track-color) 0 0) scroll no-repeat center / 100% calc(var(--track-height) + 1px);
}

input[type="range"]:disabled::-webkit-slider-thumb {
  cursor: not-allowed;
}

/* === Firefox specific styles === */
input[type="range"],
input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb {
  appearance: none;
  transition: all ease 100ms;
  height: var(--thumb-height);
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb,
input[type="range"]::-moz-range-progress {
  background: #fff0;
}

input[type="range"]::-moz-range-thumb {
  background: currentColor;
  border: 0;
  width: var(--thumb-width, var(--thumb-height));
  border-radius: var(--thumb-width, var(--thumb-height));
  cursor: grab;
}

input[type="range"]:active::-moz-range-thumb {
  cursor: grabbing;
}

input[type="range"]::-moz-range-track {
  width: 100%;
  background: var(--track-color);
}

input[type="range"]::-moz-range-progress {
  appearance: none;
  background: currentColor;
  transition-delay: 30ms;
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-progress {
  height: calc(var(--track-height) + 1px);
  border-radius: var(--track-height);
}

input[type="range"]::-moz-range-thumb,
input[type="range"]::-moz-range-progress {
  filter: brightness(100%);
}

input[type="range"]:hover::-moz-range-thumb,
input[type="range"]:hover::-moz-range-progress {
  filter: brightness(var(--brightness-hover));
}

input[type="range"]:active::-moz-range-thumb,
input[type="range"]:active::-moz-range-progress {
  filter: brightness(var(--brightness-down));
}

input[type="range"]:disabled::-moz-range-thumb {
  cursor: not-allowed;
}

/* all of the input range stuff is from this guy*/
/* Shout out to them https://codepen.io/ShadowShahriar/pen/zYPPYrQ */

#hidden{
    visibility: hidden;
}
input[type=checkbox]:checked + span, input[type=radio]:checked + span {
    color: var(--checked_text);
}

#quickcss_colorpicker {
    max-width: 10vw;
    border-radius: calc(1px * var(--radius))!important;
}

input[type=color] {
    width: 100%;
}